/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/rnm-api/customers/get": {
    get: operations["Customer-List-Get"];
  };
  "/rnm-api/modules/get": {
    get: operations["Module-List-Get"];
  };
  "/rnm-api/modulesUsingId/get/{moduleId}": {
    get: operations["Module-USING-ID-Get"];
  };
  "/rnm-api/versions/get/{moduleId}": {
    get: operations["Version-History-List-Get"];
  };
  "/rnm-api/deployments/get/{customerId}": {
    get: operations["Version-History-List-Get_1"];
  };
  "/rnm-api/modulesForLocation/get/{customerId}/{location}": {
    get: operations["Module-For-Location-List-Get"];
  };
  "/rnm-api/timeline/get/{customerId}/{location}/{moduleId}": {
    get: operations["Deployment-Time-Line-List-Get"];
  };
  "/rnm-api/dependent/get/{moduleId}": {
    get: operations["Dependent-module-List-Get"];
  };
  "/rnm-api/api/addDevReleaseNote": {
    post: operations["DEV-RELEASE-NOTE-Add"];
  };
  "/rnm-api/devReleaseNote/get/{tagId}/{customerId}": {
    get: operations["DEV-RELEASE-NOTE-View"];
  };
  "/rnm-api/releaseNoteEdit/get/{moduleId}/{versionNo}": {
    get: operations["Version-Number-List-Get"];
  };
  "/rnm-api/api/editDevReleaseNote": {
    post: operations["Release-Dev-Note-List-Edit"];
  };
  "/rnm-api/getVersionForDeployToLocation/{moduleId}": {
    get: operations["VERSIONS-FOR-DEPLOY-TO-LOCATION-GET"];
  };
  "/rnm-api/getCustomerForDeployToLocation/{moduleId}": {
    get: operations["CUSTOMERS-FOR-DEPLOY-TO-LOCATION-GET"];
  };
  "/rnm-api/getLocationForDeployToLocation": {
    get: operations["LOCATIONS-FOR-DEPLOY-TO-LOCATION-GET"];
  };
  "/rnm-api/api/deployToLocation": {
    post: operations["DEPLOY-TO-LOCATION"];
  };
  "/rnm-api/getDeploymentHistory/{ModuleId}/{VersionNo}": {
    get: operations["LOCATIONS-FOR-VIEW-RELEASE-NOTE-GET"];
  };
  "/rnm-api/api/addTagData": {
    post: operations["Tag-Data-Add"];
  };
  "/rnm-api/getVersionHistoryData/{ModuleId}": {
    get: operations["VERSION-HISTORY-DATA-GET"];
  };
  "/rnm-api/getCustomersForModule/{ModuleId}": {
    get: operations["CUSTOMERS-FOR-MODULE-GET"];
  };
  "/rnm-api/getModuleDeployment/{ModuleId}/{VersionNo}/{DeploymentLocation}/{CustomerId}": {
    get: operations["MODULE-DEPLOYMENT-DATA-GET"];
  };
  "/rnm-api/getAvailableCustomersInDevReleaseNote/{tagId}": {
    get: operations["AVAILABLE-CUSTOMERS-IN-DEV-RELEASE-GET"];
  };
  "/rnm-api/api/addDAReleaseNote": {
    post: operations["DA-RELEASE-NOTE-Add"];
  };
  "/rnm-api/api/editDAReleaseNote": {
    post: operations["Release-DA-Note-List-Edit"];
  };
  "/rnm-api/daReleaseNote/get/{tagId}/{customerId}": {
    get: operations["DA-RELEASE-NOTE-View"];
  };
}

export interface operations {
  /**
   * Get the list of customers in the system
   */
  "Customer-List-Get": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["CustomersList"];
      };
    };
  };
  /**
   * Get the list of modules in the system
   */
  "Module-List-Get": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["ModulesList"];
      };
    };
  };
  /**
   * Get the module using id in the system
   */
  "Module-USING-ID-Get": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["ModulesList"];
      };
    };
  };
  /**
   * Get the list of version history for a module in the system
   */
  "Version-History-List-Get": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["VersionHistoryList"];
      };
    };
  };
  /**
   * Get the list of deployment location for a customer in the system
   */
  "Version-History-List-Get_1": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["DeploymentLocationList"];
      };
    };
  };
  /**
   * Get the list of modules for a deployment location for a customer in the system
   */
  "Module-For-Location-List-Get": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["ModulesForLocationList"];
      };
    };
  };
  /**
   * Get the deployment time line in the system
   */
  "Deployment-Time-Line-List-Get": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["DeploymentTimeLineList"];
      };
    };
  };
  /**
   * Get the dependent module list in the system
   */
  "Dependent-module-List-Get": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["DependentModuleList"];
      };
    };
  };
  /**
   * Add dev release notes to the system
   */
  "DEV-RELEASE-NOTE-Add": {
    responses: {
      /**
       * OK
       */
      "200": {
        "application/json": components["schemas"]["AddDevReleaseNote"];
      };
    };
  };
  /**
   * view dev release notes to the system
   */
  "DEV-RELEASE-NOTE-View": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["ViewDevReleaseNoteList"];
      };
    };
  };
  /**
   * get release note version to edit release notes in the system
   */
  "Version-Number-List-Get": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["VersionHistoryInReleaseNoteList"];
      };
    };
  };
  /**
   * Edit Dev release notes to the system
   */
  "Release-Dev-Note-List-Edit": {
    responses: {
      /**
       * OK
       */
      "200": {
        "application/json": components["schemas"]["EditDevReleaseNote"];
      };
    };
  };
  /**
   * Get versions for deploy to location from the system
   */
  "VERSIONS-FOR-DEPLOY-TO-LOCATION-GET": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["VersionForDeployToLocationList"];
      };
    };
  };
  /**
   * Get customers for deploy to location from the system
   */
  "CUSTOMERS-FOR-DEPLOY-TO-LOCATION-GET": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["CustomerForDeployToLocationList"];
      };
    };
  };
  /**
   * Get locations for deploy to location from the system
   */
  "LOCATIONS-FOR-DEPLOY-TO-LOCATION-GET": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["LocationForDeployToLocationList"];
      };
    };
  };
  /**
   * Deploy to location
   */
  "DEPLOY-TO-LOCATION": {
    responses: {
      /**
       * OK
       */
      "200": {
        "application/json": components["schemas"]["DeployToLocation"];
      };
    };
  };
  /**
   * Get locations for view release note from the system
   */
  "LOCATIONS-FOR-VIEW-RELEASE-NOTE-GET": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["DeploymentHistoryForReleaseNoteList"];
      };
    };
  };
  /**
   * Add tag data to the system
   */
  "Tag-Data-Add": {
    responses: {
      /**
       * OK
       */
      "200": {
        "application/json": components["schemas"]["AddTagData"];
      };
    };
  };
  /**
   * Get version history data from the system
   */
  "VERSION-HISTORY-DATA-GET": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["VersionHistoryDataList"];
      };
    };
  };
  /**
   * Get Customers from the module from the system
   */
  "CUSTOMERS-FOR-MODULE-GET": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["CustomersList"];
      };
    };
  };
  /**
   * Get module deployment data from the system
   */
  "MODULE-DEPLOYMENT-DATA-GET": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["ViewModuleDeploymentList"];
      };
    };
  };
  /**
   * get Available Customers In Dev Release Note
   */
  "AVAILABLE-CUSTOMERS-IN-DEV-RELEASE-GET": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["CustomersList"];
      };
    };
  };
  /**
   * Add DA release note
   */
  "DA-RELEASE-NOTE-Add": {
    responses: {
      /**
       * OK
       */
      "200": {
        "application/json": components["schemas"]["AddDAReleaseNote"];
      };
    };
  };
  /**
   * Edit DA release notes to the system
   */
  "Release-DA-Note-List-Edit": {
    responses: {
      /**
       * OK
       */
      "200": {
        "application/json": components["schemas"]["EditDAReleaseNote"];
      };
    };
  };
  /**
   * view da release notes to the system
   */
  "DA-RELEASE-NOTE-View": {
    responses: {
      /**
       * OK
       */
      "200": {
        "*/*": components["schemas"]["ViewDAReleaseNoteList"];
      };
    };
  };
}

export interface components {
  schemas: {
    Customer: { id: number; name: string };
    CustomersList: { customers: components["schemas"]["Customer"][] };
    Module: { id: number; name: string; git: string };
    ModulesList: { modules: components["schemas"]["Module"][] };
    VersionHistory: {
      module_id: number;
      version_no: string;
      release_date: string;
      deployment_location: string;
    };
    VersionHistoryList: {
      versionHistory: components["schemas"]["VersionHistory"][];
    };
    DeploymentLocation: {
      deployment_location: "da" | "testbed" | "staging" | "production";
    };
    DeploymentLocationList: {
      deploymentLocation: components["schemas"]["DeploymentLocation"][];
    };
    ModulesForLocation: {
      id: number;
      module_id: number;
      module_name: string;
      version_no: string;
      customer_id: number;
      deployment_location: string;
      tagId: number;
      branchName: string;
    };
    ModulesForLocationList: {
      modulesForLocation: components["schemas"]["ModulesForLocation"][];
    };
    DeploymentTimeLine: {
      id: number;
      version_no: string;
      applied_date: string;
    };
    DeploymentTimeLineList: {
      deploymentTimeLine: components["schemas"]["DeploymentTimeLine"][];
    };
    DependentModule: { id: number; name: string; versions: string[] };
    DependentModuleList: {
      dependentModules: components["schemas"]["DependentModule"][];
    };
    AddDevReleaseNote: {
      tagId: number;
      customerId: number;
      type: string;
      dependentVersion: components["schemas"]["DependentModuleVersion"][];
      applyOnTopOf: string;
      docName: string;
      buildInstructions: string;
      pdInstructions: string;
      featureSummary: string;
      knowIssues: string;
      fixedBugs: string;
      areasToBeTested: string;
      releaseBy: string;
      releaseDate: string;
    };
    DependentModuleVersion: { module: string; version: string };
    ViewDevReleaseNote: {
      customerName: string;
      dependentVersion: components["schemas"]["DependentModuleVersion"][];
      applyOnTopOf: string;
      type: string;
      docName: string;
      buildInstructions: string;
      pdInstructions: string;
      featureSummary: string;
      knowIssues: string;
      fixedBugs: string;
      areasToBeTested: string;
      releaseBy: string;
      releaseDate: string;
    };
    ViewDevReleaseNoteList: {
      viewDevReleaseNote: components["schemas"]["ViewDevReleaseNote"][];
    };
    VersionHistoryInReleaseNote: { version_no: string };
    VersionHistoryInReleaseNoteList: {
      versionHistoryInReleaseNote: components["schemas"]["VersionHistoryInReleaseNote"][];
    };
    EditDevReleaseNote: {
      tagId: number;
      customerId: number;
      type: string;
      dependentVersion: components["schemas"]["DependentModuleVersion"][];
      applyOnTopOf: string;
      docName: string;
      buildInstructions: string;
      pdInstructions: string;
      featureSummary: string;
      knowIssues: string;
      fixedBugs: string;
      areasToBeTested: string;
      releaseBy: string;
      releaseDate: string;
    };
    VersionForDeployToLocation: {
      id: number;
      customerId: number;
      deploymentLocation: string;
      moduleId: number;
      versionNo: string;
    };
    VersionForDeployToLocationList: {
      deployToLocationGetDataList: components["schemas"]["VersionForDeployToLocation"][];
    };
    CustomerForDeployToLocation: { customerId: number; customerName: string };
    CustomerForDeployToLocationList: {
      customerForDeployToLocation: components["schemas"]["CustomerForDeployToLocation"][];
    };
    LocationForDeployToLocation: {
      customerId: number;
      deploymentLocation: "da" | "testbed" | "staging" | "production";
    };
    LocationForDeployToLocationList: {
      locationForDeployToLocation: components["schemas"]["LocationForDeployToLocation"][];
    };
    DeployToLocation: {
      customerId: number;
      deploymentLocation: string;
      moduleId: number;
      versionNo: string;
      appliedDate: string;
      appliedBy: string;
      comments: string;
      previousVersion: string;
      status: "Planned" | "Active" | "Rejected" | "Retierd";
    };
    DeploymentHistoryForReleaseNote: {
      deploymentId: number;
      customerId: number;
      customerName: string;
      deploymentLocation: string;
      appliedDate: string;
    };
    DeploymentHistoryForReleaseNoteList: {
      deploymentHistoryForReleaseNote: components["schemas"]["DeploymentHistoryForReleaseNote"][];
    };
    AddTagData: { moduleId: number; versionNo: string; branchName: string };
    DeployedLocation: { deploymentLocation: string };
    VersionHistoryData: {
      tagId: number;
      versionNo: string;
      branchName: string;
      details: components["schemas"]["VersionHistoryOtherData"][];
    };
    VersionHistoryDataList: {
      versionHistoryData: components["schemas"]["VersionHistoryData"][];
    };
    VersionHistoryOtherData: {
      customerId: number;
      customerName: string;
      date: string;
      deploymentData: components["schemas"]["DeployedLocation"][];
    };
    ViewModuleDeployment: {
      customerId: number;
      deploymentLocation: string;
      moduleId: number;
      versionNo: string;
      appliedBy: string;
      appliedDate: string;
      comments: string;
      previousVersionId: number;
      status: "Planned" | "Active" | "Rejected" | "Retierd";
      previousVersion: string;
    };
    ViewModuleDeploymentList: {
      viewModuleDeployment: components["schemas"]["ViewModuleDeployment"][];
    };
    AddDAReleaseNote: {
      tagId: number;
      customerId: number;
      artifactLocation: string;
      md5sum: string;
      testedAreas: string;
      newFeatures: string;
      foundBugs: string;
      fixedBugs: string;
      knownBugs: string;
      limitations: string;
      modulesReleased: string;
      prerequisits: string;
      deployInstructions: string;
      testCases: string;
      patchInstructions: string;
      areasToBeTested: string;
      releasedBy: string;
      releasedDate: string;
      testedBy: string;
      plannedStart: string;
      plannedEnd: string;
      actualStart: string;
      actualEnd: string;
      type: string;
      comment: string;
    };
    EditDAReleaseNote: {
      tagId: number;
      customerId: number;
      artifactLocation: string;
      md5sum: string;
      testedAreas: string;
      newFeatures: string;
      foundBugs: string;
      fixedBugs: string;
      knownBugs: string;
      limitations: string;
      modulesReleased: string;
      prerequisits: string;
      deployInstructions: string;
      testCases: string;
      patchInstructions: string;
      areasToBeTested: string;
      testedBy: string;
      plannedStart: string;
      plannedEnd: string;
      actualStart: string;
      actualEnd: string;
      type: string;
      comment: string;
    };
    ViewDAReleaseNote: {
      tagId: number;
      customerId: number;
      artifactLocation: string;
      md5sum: string;
      testedAreas: string;
      newFeatures: string;
      foundBugs: string;
      fixedBugs: string;
      knownBugs: string;
      limitations: string;
      modulesReleased: string;
      prerequisits: string;
      deployInstructions: string;
      testCases: string;
      patchInstructions: string;
      areasToBeTested: string;
      releasedBy: string;
      releasedDate: string;
      testedBy: string;
      plannedStart: string;
      plannedEnd: string;
      actualStart: string;
      actualEnd: string;
      type: string;
      comment: string;
    };
    ViewDAReleaseNoteList: {
      viewDAReleaseNote: components["schemas"]["ViewDAReleaseNote"][];
    };
  };
}
